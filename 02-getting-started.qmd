# Getting Started

## Making an account

Sign in or sign up to make an account here: [https://landscapes.wearepal.ai/](https://landscapes.wearepal.ai/)

![](images/02-screenshots-start/02-sign-up.png)

Then select a team or create a new one. You will automatically be added to the "Guest" team where you can view live demo projects. Details of how these live demo projects were created are given in chapters 3 and 5. 

![](images/02-screenshots-start/03-select-team.png)

## Setting up a new project

After you have logged in to your team workspace, the first menu you will see is the Project Menu. Click the blue"+" symbol to create a new project.

![](images/02-screenshots-start/04-project-menu.png)

First you will need to select an extent for the project and give the project a name. These can both be changed later if necessary.

![](images/02-screenshots-start/05-create-project.png)

## Adding Map Layers

When you open the project, the default view is ***Map View.***

![](images/02-screenshots-start/06-map-view.png)

Click the black "+" next to the "Layers" heading to add map layers.

![](images/02-screenshots-start/07-map-view-add-layers.png)

There are a variety of layers available, organised into groups of drop down menus. We will choose one from the "Designations" group.

![](images/02-screenshots-start/08-map-view-designations.png)

Let's add "Ancient Woodland" to the map. It now shows up in the layer menu on the right and on the map in orange.

![](images/02-screenshots-start/09-map-view-ancient-woodland.png)

This is the most straightforward way of adding a new map layer to examine alongside other layers in Map view. It also preserves the original layer's data type (e.g. point data, vector data, raster data etc.). However, if you want to be able to use a map layer in analysis or to view statistics about a map layer it needs to be added in ***Model view*** which converts it to a format usable for modelling and generating statistics.

## Model View

To enter the project ***Model view***, click the button on the top menu bar labelled "Model view." It will take you to the following screen.

![](images/02-screenshots-start/11-model-view-blank.png)

Right click the blank canvas to open the menu of model components.

![](images/02-screenshots-start/12-model-view-right-click.png)

You will see a list of component types to choose from including:

1. **Inputs**: import data into the model.
2. **Outputs**: add an output as a new layer in Map view or save it to your workspace datasets.
3. **Properties**: add area and unit properties to map layer output.
4. **Conversions**: convert data from number to numeric grid, numeric grid to number, boolean to categorical dataset.
5. **Calculations**: calculate area, create a distance map, return the cell area, or generate an interpolation from input data.
6. **Charts**: create a bar chart.
7. **Set operations**: perform set operations on boolean datasets.
8. **Arithmetic**: masking, expressions, and a set of simple mathematical functions to transform numerical datasets.

Hover the mouse over each category to see the list of components. Let's chose UKCEH Land Cover from the Inputs category.

![](images/02-screenshots-start/13-model-view-input-ceh.png)

When you click the UKCEH Land Cover option it will add the component to the canvas from where you can interact with it (see below). It shows a box with a drop list to select the year and a set of blue nodes labelled for each type of land cover. These are the component's output nodes because they appear on the right hand side. This component has no input nodes (which would appear on the left).

![](images/02-screenshots-start/14-model-view-ceh.png)

Hover the mouse over the "?" at the top right of the UKCEH component to see information about the dataset.

![](images/02-screenshots-start/15-model-view-ceh-info.png)

Now let's say we want to create a new map layer showing only "Deciduous Woodland" from the UKCEH dataset. We can do this using the "Output" component called "Map layer".

![](images/02-screenshots-start/16-model-view-output-map.png)

The "Map layer" component takes two inputs indicated by the nodes on its left hand edge. The top input node is labelled "Output" because it determines what is sent as an output to Map view. The "Properties" input takes area and unit properties which are used to label the map layer in Map view. These are optional so we will ignore them for now.

![](images/02-screenshots-start/17-model-view-map-layer.png)

Make sure the year 2021 is selected on the UKCEH component and then click and drag from the "Deciduous Woodland" node to the input node on the Map layer component labelled "Output" (see below). Rename the Map layer component to something like "Woodland". This is the name that will appear in Map view as the label for the new map layer.

![](images/02-screenshots-start/18-model-view-ukceh-map-layer.png)

Now save and run the model. When the run process is complete you can switch back to ***Map view*** by clicking the button on the top menu bar.

![](images/02-screenshots-start/19-map-view-woodland-layer.png)

It is difficult to see the new Woodland layer because the default colours are white for TRUE and transparent for FALSE (i.e. areas of woodland show up as white while areas which are not woodland are invisible). As the new layer is overlaid on top of the OpenStreetMap layer the white areas of woodland are barely visible. Let's see how to manipulate map layers to make them more visible and meaningful as we view them overlaid on one another.

## Manipulating map layers

The layer colour options can be viewed by clicking the layer and opening the "Layer legend."

![](images/02-screenshots-start/20-map-view-woodland-legend.png)

Click the white square next to the label TRUE and select a colour from the colour palette.

![](images/02-screenshots-start/21-map-view-woodland-colour.png)

Now you will see the colour on the map change to match your selection.

![](images/02-screenshots-start/22-map-view-woodland-green.png)

::: {.callout-tip}
You will notice that the "Woodland" layer is displayed as small grid squares. This is because the original data has been converted into a raster format (i.e. grid squares) to match the project resolution and zoom level - in this case zoom level 23 with a cell resolution of around 3x3m.
:::

Map layers can be re-ordered by clicking and dragging each layer up and down in the right hand sidebar. Each layer in the sidebar is displayed over all the layers below it. Click on the Woodland layer and drag it to the top of the stack of layers to see how the map view changes.

![](images/02-screenshots-start/23-map-view-reorder.png)

The opacity of each layer can be adjusted to allow you to view one or more layers simultaneously. Now let's put the Woodland layer back where it was, directly below the Ancient Woodland layer. Next, click on the Ancient Woodland layer, open "Layer settings" and adjust the opacity slider until you begin to see the new Woodland layer below. Now we can clearly see to what extent the designated areas of Ancient Woodland overlap with the extent of Deciduous Woodland recorded in 2021.

![](images/02-screenshots-start/24-map-view-opacity.png)

As mentioned above, adding a new map layer in this way (via the ***Model view***) means you can view information about it directly in ***Map view*** and via the ***Snapshot*** tool.

## Layer information

After saving the current project, return to the project menu and open the demonstration project called "Demo AGC." This has been set up for you with a model to estimate above ground carbon in the landscape of Kew Wakehurst using a habitat basemap and lidar data measuring feature height for all habitats containing vegetation. Feel free to toggle ***Model view*** to see how the model is structured.

In Map view you will notice a map layer called "c-store le veg linear feature-ht". It won't show any data until you run the model.

![](images/02-screenshots-start/25-demo-agc-map.png)

Click "Run" and wait a moment for the model to create the map layer. It should look like this:

![](images/02-screenshots-start/26-demo-agc-c-store-grey.png)

Notice that the "Layer legend" now shoes a gradient bar of values from 0 to 272.87 with units of t/ha. The model has generated a raster layer representing organic carbon density. The density in t/ha of organic carbon estimated for each cell (1.5x1.5m) is represented as shade of grey from black (minimum) to white (maximum).

To change the colour of the gradient go to the "Layer settings" and click on "Fill mode". From the drop down list you can select whatever fill mode you want. Let's try "Jet."

![](images/02-screenshots-start/27-demo-agc-c-store-fill.png)

The map is much easier to read with this adjustment.

![](images/02-screenshots-start/28-demo-agc-c-store-jet.png)

Now let's take a look at some more detailed information about the c-store layer.

## Snapshot tool

The ***Snapshot*** tool is used to view graphs and statistical information about a map layer<!-- and to download this information as CSV files for analysis with R or for use in excel and other statistical analysis programs.-->. Click "Snapshot" on the top menu bar to open the tool.

![](images/02-screenshots-start/29-demo-agc-snapshot.png)

The tool opens a new panel alongisde the layer menu and the map.

![](images/02-screenshots-start/30-demo-agc-snapshot-open.png)

To select an area to snapshot, hold down the command key and click and drag the mouse on the map. The ***Snapshot*** tool will immediately display a graph and some summer statistics about the area of the layer which you have selected.

![](images/02-screenshots-start/31-demo-agc-snapshot-selection.png)

Below the graph, you should also see a list of values for Sum, Min, Max, Median, Range and Mean. In addition to adjusting the decimal places of these values you can also adjust the number of bars displayed in the graph above.

![](images/02-screenshots-start/32-demo-agc-snapshot-stats.png)

If you want to see a graph and stats for the whole project area you can simply click "Set extent" and then select "Use project extent."

![](images/02-screenshots-start/33-demo-agc-snapshot-project.png)

The tool will now show you the same information for the entire project extent (indicated within the white highlight box on the map).

![](images/02-screenshots-start/34-demo-agc-snapshot-project-extent.png)

## Scaling

Now let's say we want to run the same carbon model for a larger area such as the whole of the Wealden District Council. We can do this from ***Model view*** by clicking the "Extent" button on the top menu bar.

![](images/02-screenshots-start/35-demo-agc-model-extent.png)

This takes you to the project extent page where you choose a new extent to run the model on.

![](images/02-screenshots-start/36-demo-agc-change-extent.png)

It is currently set to Wakehurst. Click the drop down and select "Wealden District Council."

![](images/02-screenshots-start/37-demo-agc-wealden.png)

You will notice that the map shows the new extent and an updated zoom level of 20 since the area is much larger than the Wakehurst extent.

![](images/02-screenshots-start/38-demo-agc-wealden-box.png)

Click "Save and open project" and you will be taken back to the project Map view. If you hover the mouse over the yellow "Med" box on the top menu bar and it will display the extent on the map.

![](images/02-screenshots-start/39-demo-agc-wealden-map.png)

Now click "Run" and wait while the model is processing. After a few seconds the c-store layer will be updated as a map covering the Wealden District Council area.

![](images/02-screenshots-start/41-demo-agc-wealden-c-store.png)

## Saving datasets

Now we might want to save this c-store layer as a dataset to use in other projects. For example we could create a new project to compare the results of this model with another model of stored organic carbon or combine it with a model of below soil carbon. Or perhaps we already have an opportunity map showing potential locations for nature recovery projects which we could use with the carbon map and other biodiversity data to explore the implications of implementing these projects across the landscape.

Back in ***Model view***, right click the canvas and select from the Outputs list the component called "Save dataset."

![](images/02-screenshots-start/42-demo-agc-model-outputs.png)

This component takes only one input to the node labelled "Output."

![](images/02-screenshots-start/43-demo-agc-model-save-dataset.png)

Connect the output from our model to the node on "Save datasets" and rename it something meaningful so you can find it again in the dataset menu. Then save the model and click "Run." When the run process has completed the component will read "Saved!"

![](images/02-screenshots-start/44-demo-agc-model-save-connected.png)

Now click "Back to projects" to return to the projects menu and click on "Datasets" to view your saved dataset.

![](images/02-screenshots-start/45-demo-agc-datasets.png)

From here you can edit the name of the dataset, delete it or download it as a json file.

## Using datasets in models

Next, return to the projects menu and open the "Test Project" we created at the start of this chapter and toggle ***Model view***. Right click the model canvas and select from the "Inputs" list the component called "Load dataset."

![](images/02-screenshots-start/46-test-inputs-load-dataset.png)

This component has one output node and a dropdown list from which to select your pre-saved dataset.

![](images/02-screenshots-start/47-test-load-dataset.png)

There is one very simple operation we can do first to demonstrate how to use the dataset in a model. We will use the Deciduous Woodland class from UKCEH to mask the c-store dataset thus creating a map of carbon stored in one type woodland.

First, select from the "Arithmetic" list the component called "Mask numeric data."

![](images/02-screenshots-start/48-test-arithmetic-mask.png)

This component takes two inputs (a boolean layer to provide the mask and a numeric dataset to be masked) and provides one output (masked layer).

![](images/02-screenshots-start/49-test-mask.png)

Connect the output from the loaded dataset to the red node labelled "Numeric dataset."

![](images/02-screenshots-start/50-test-mask-numeric.png)

And connect the Deciduous Woodland node to the blue node labelled "Mask."

![](images/02-screenshots-start/51-test-mask-numeric-boolean.png)

If you run the model now it will fail to execute because the dataset does not cover the same area set as the project extent. It was created for the Wealden District Council exent and this project is still set to the Brighton Pavillion extent.

![](images/02-screenshots-start/52-test-mask-fail.png)

Click the "Extent" button on the top menu bar and change the extent to match the loaded dataset.

![](images/02-screenshots-start/53-test-change-extent.png)

Now when you run the model it should produce a preview inside the "Mask numeric data" component so that you can verify that it is doing what you expect.

![](images/02-screenshots-start/54-test-mask-preview.png)

The new masked layer can be added to Map view or saved as a new dataset in the same way as described above.

## Adding datasets as map layers

Alternatively, datasets can also be added directly in ***Map view*** as new map layers. Your saved datasets are displayed under the dropdown list labelled with your team name. In this case "Demo."

![](images/02-screenshots-start/55-test-map-dataset.png)

As soon as you select the dataset it will be added to the layer list and displayed on the map.

![](images/02-screenshots-start/56-test-map-dataset-added.png)

The fill mode of the new dataset layer can be changed in the same way as a layer added directly from Model view.

![](images/02-screenshots-start/57-test-map-dataset-jet.png)

One key difference with pre-saved datasets is that they load directly when you open the project whereas layers added directly from ***Model view*** using the "Map layer" component are only visible after running the model.

## Expressions

There is one more very important component that can be used in Model view and which provides a great deal of flexibility for building your models. It is the "Expression" component and you can find it in the "Arithmetic" list.

![](images/02-screenshots-start/58-test-model-expression.png)

This component has a number of inputs (which are adjustable as you will soon see) and generates one output. It also has a drop down list for you to select from a choice of different expressions.

![](images/02-screenshots-start/59-test-model-expression-lin.png)

Before we use this component in the model we can create our own expression from the expression menu in project view.

![](images/02-screenshots-start/60-expressions.png)

Click the blue "+" sign to create a new expression.

![](images/02-screenshots-start/61-new-expression.png)

Here we can name and define our own expression. For now we can simply call it "Test" and define a simple formula "w * x + t". This will create an expression component with three inputs corresponding to the text in this formula which will perform the calculation as defined for each cell in the input dataset to provide a equivalent output dataset.

![](images/02-screenshots-start/62-test-expression-define.png)

To check that the expression is doing what we expect we can click the "Test expression" button and enter some numbers to view the result.

![](images/02-screenshots-start/63-test-expression-define-test.png)

Save the expression and you should now see it listed in the Expressions menu.

![](images/02-screenshots-start/64-expression-menu.png)

Return to the project and toggle ***Model view***. You should now see the new expression that we just created in the drop down list of the Expression component.

![](images/02-screenshots-start/65-test-model-select-expression.png)

When you select the "Test" expression, the component box will change to create the correct input nodes and display the formula to show you the calculation it will perform.

![](images/02-screenshots-start/66-test-model-expression-selected.png)

Connect the red "Masked layer" node to the expression's input node labelled "w".

![](images/02-screenshots-start/67-test-model-expression-w.png)

Next we can use a numeric constant to provide inputs to the other nodes "t" and "x". You will find the "Numeric constant" component in the "Inputs" list. For simplicity's sake let's just connect it to both input nodes and give a value of "2".

![](images/02-screenshots-start/68-test-model-expression-constant.png)

Finally, add a "Map layer" component to add the expression output to ***Map view*** and label it something meaningful.

![](images/02-screenshots-start/69-test-model-expression-output.png)

Save the project, toggle ***Map view*** and run the model to view the new map layer. You should now see it listed in the layer menu above c-store layer we added previously.

![](images/02-screenshots-start/70-test-map-expression-modified-layer.png)

Now you are ready to play around building models and exploring your datasets alongside other map layers. For an example of use case with step by step guides to building a complete model turn to the next chapter.